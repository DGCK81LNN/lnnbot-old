"use strict";
/**
 * 辅助工具，输出彩色控制台信息。
 * @packageDocumentation
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var chalk_1 = __importDefault(require("chalk"));
/**
 * 日志工具类
 */
var Logger = /** @class */ (function () {
    function Logger(prefix) {
        if (prefix === void 0) { prefix = chalk_1.default.cyan("[mirai-ts]"); }
        this.prefix = prefix;
        /**
         * 启用
         */
        this.enable = true;
    }
    /**
     * 打印消息
     * @param type 类型
     * @param msg 消息
     */
    Logger.prototype.print = function (type, msg) {
        if (!this.enable)
            return;
        var color = {
            success: "green",
            warning: "yellow",
            error: "red",
            info: "blue",
        };
        var typeColor = color[type];
        var typeName = "[" + type + "]";
        var content = [chalk_1.default[typeColor](typeName), msg];
        if (this.prefix) {
            content.unshift(this.prefix);
        }
        console.log.apply(console, content);
    };
    /**
     * 输出成功信息（绿色）
     * @param msg 文本
     */
    Logger.prototype.success = function (msg) {
        this.print("success", msg);
    };
    /**
     * 输出警告信息（黄色）
     * @param msg 文本
     */
    Logger.prototype.warning = function (msg) {
        this.print("warning", msg);
    };
    /**
     * 输出错误信息（红色）
     * @param msg 文本
     */
    Logger.prototype.error = function (msg) {
        this.print("error", msg);
    };
    /**
     * 输出提示信息（蓝色）
     * @param msg 文本
     */
    Logger.prototype.info = function (msg) {
        this.print("info", msg);
    };
    return Logger;
}());
exports.default = Logger;
